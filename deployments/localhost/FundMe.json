{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4c85b107873978629d858c64cdffdda246de4904cf5e7a360b65b5cbfc7596a0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "903988",
    "logsBloom": "0x
    "blockHash": "0xa7354a7abe5f59c69f771166d99c27c09a2be4f4c96f0a06ae1cdca5974dcefd",
    "transactionHash": "0x4c85b107873978629d858c64cdffdda246de4904cf5e7a360b65b5cbfc7596a0",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "903988",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2713fc662169ba727485e0d46648bae0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n    //constant variables are cheaper when it is called than normal variables\\r\\n    uint256 public constant minimumUSD = 50 * 1e18;\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    address public owner;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require( //the first parameter it goint to be msg.value and the second paramater it's going to be priceFeed\\r\\n            msg.value.getConversionRate(priceFeed) >= minimumUSD,\\r\\n            \\\"Didn't send enough!\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n\\r\\n        funders = new address[](0);\\r\\n\\r\\n        //transfer\\r\\n        //msg.sender = address\\r\\n        //payable(msg.sender) = payable address\\r\\n        //call\\r\\n        (bool callSucces, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSucces, \\\"Call failed\\\");\\r\\n        //this it refers to the hole contract\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Sender is not owner!\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2ede33dfde8a9ddd03bfcb32cd4d1b11abaa56bf4f75eb59e2c98edbff3de578\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        //Eth in terms of USD\\r\\n        //to convert the variable int256 price to uint256 price, we have to write the sintax like the underline.Also, we have to avilitate the function to make changes on the state\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() public view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n            0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\r\\n        );\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; //we have to make that divison, because its a multiplication and the compiler will display 21 zeros\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc5489a60a8c9d0d5dc30645cbacbafd7b8e3aa1435be08154b17fc6d04d6134a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000fed38038062000fed8339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e91806200015c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633430a88c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af9190610769565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107e7565b61052a565b6040516101039190610769565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610873565b60405180910390f35b34801561014357600080fd5b5061014c610568565b604051610159919061089d565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e4565b61058e565b6040516101a0919061089d565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cd90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061096e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610366906109da565b60405180910390fd5b60005b60008054905081101561041a576000808281548110610394576103936109fa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041290610a58565b915050610372565b50600067ffffffffffffffff81111561043657610435610aa1565b5b6040519080825280602002602001820160405280156104645781602001602082028036833780820191505090505b506000908051906020019061047a9291906106a9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a190610b01565b60006040518083038185875af1925050503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b5050905080610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e90610b62565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610b82565b6105fc9190610c0b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065257600080fd5b505afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190610cc9565b5050509150506402540be400816106a19190610d44565b915050919050565b828054828255906000526020600020908101928215610722579160200282015b828111156107215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c9565b5b50905061072f9190610733565b5090565b5b8082111561074c576000816000905550600101610734565b5090565b6000819050919050565b61076381610750565b82525050565b600060208201905061077e600083018461075a565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b482610789565b9050919050565b6107c4816107a9565b81146107cf57600080fd5b50565b6000813590506107e1816107bb565b92915050565b6000602082840312156107fd576107fc610784565b5b600061080b848285016107d2565b91505092915050565b6000819050919050565b600061083961083461082f84610789565b610814565b610789565b9050919050565b600061084b8261081e565b9050919050565b600061085d82610840565b9050919050565b61086d81610852565b82525050565b60006020820190506108886000830184610864565b92915050565b610897816107a9565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c181610750565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b6000602082840312156108fa576108f9610784565b5b6000610908848285016108cf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610958601383610911565b915061096382610922565b602082019050919050565b600060208201905081810360008301526109878161094b565b9050919050565b7f53656e646572206973206e6f74206f776e657221000000000000000000000000600082015250565b60006109c4601483610911565b91506109cf8261098e565b602082019050919050565b600060208201905081810360008301526109f3816109b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6382610750565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9657610a95610a29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aeb600083610ad0565b9150610af682610adb565b600082019050919050565b6000610b0c82610ade565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4c600b83610911565b9150610b5782610b16565b602082019050919050565b60006020820190508181036000830152610b7b81610b3f565b9050919050565b6000610b8d82610750565b9150610b9883610750565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd157610bd0610a29565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1682610750565b9150610c2183610750565b925082610c3157610c30610bdc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5b81610c3c565b8114610c6657600080fd5b50565b600081519050610c7881610c52565b92915050565b6000819050919050565b610c9181610c7e565b8114610c9c57600080fd5b50565b600081519050610cae81610c88565b92915050565b600081519050610cc3816108b8565b92915050565b600080600080600060a08688031215610ce557610ce4610784565b5b6000610cf388828901610c69565b9550506020610d0488828901610c9f565b9450506040610d1588828901610cb4565b9350506060610d2688828901610cb4565b9250506080610d3788828901610c69565b9150509295509295909350565b6000610d4f82610c7e565b9150610d5a83610c7e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9957610d98610a29565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd657610dd5610a29565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1357610e12610a29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5057610e4f610a29565b5b82820290509291505056fea26469706673582212208278d739a6a1ea61557b326427f99e10a92e58d5d5360a1fa4f824c16e278a1a64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633430a88c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af9190610769565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107e7565b61052a565b6040516101039190610769565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610873565b60405180910390f35b34801561014357600080fd5b5061014c610568565b604051610159919061089d565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e4565b61058e565b6040516101a0919061089d565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cd90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061096e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610366906109da565b60405180910390fd5b60005b60008054905081101561041a576000808281548110610394576103936109fa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041290610a58565b915050610372565b50600067ffffffffffffffff81111561043657610435610aa1565b5b6040519080825280602002602001820160405280156104645781602001602082028036833780820191505090505b506000908051906020019061047a9291906106a9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a190610b01565b60006040518083038185875af1925050503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b5050905080610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e90610b62565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610b82565b6105fc9190610c0b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065257600080fd5b505afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190610cc9565b5050509150506402540be400816106a19190610d44565b915050919050565b828054828255906000526020600020908101928215610722579160200282015b828111156107215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c9565b5b50905061072f9190610733565b5090565b5b8082111561074c576000816000905550600101610734565b5090565b6000819050919050565b61076381610750565b82525050565b600060208201905061077e600083018461075a565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b482610789565b9050919050565b6107c4816107a9565b81146107cf57600080fd5b50565b6000813590506107e1816107bb565b92915050565b6000602082840312156107fd576107fc610784565b5b600061080b848285016107d2565b91505092915050565b6000819050919050565b600061083961083461082f84610789565b610814565b610789565b9050919050565b600061084b8261081e565b9050919050565b600061085d82610840565b9050919050565b61086d81610852565b82525050565b60006020820190506108886000830184610864565b92915050565b610897816107a9565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c181610750565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b6000602082840312156108fa576108f9610784565b5b6000610908848285016108cf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610958601383610911565b915061096382610922565b602082019050919050565b600060208201905081810360008301526109878161094b565b9050919050565b7f53656e646572206973206e6f74206f776e657221000000000000000000000000600082015250565b60006109c4601483610911565b91506109cf8261098e565b602082019050919050565b600060208201905081810360008301526109f3816109b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6382610750565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9657610a95610a29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aeb600083610ad0565b9150610af682610adb565b600082019050919050565b6000610b0c82610ade565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4c600b83610911565b9150610b5782610b16565b602082019050919050565b60006020820190508181036000830152610b7b81610b3f565b9050919050565b6000610b8d82610750565b9150610b9883610750565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd157610bd0610a29565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1682610750565b9150610c2183610750565b925082610c3157610c30610bdc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5b81610c3c565b8114610c6657600080fd5b50565b600081519050610c7881610c52565b92915050565b6000819050919050565b610c9181610c7e565b8114610c9c57600080fd5b50565b600081519050610cae81610c88565b92915050565b600081519050610cc3816108b8565b92915050565b600080600080600060a08688031215610ce557610ce4610784565b5b6000610cf388828901610c69565b9550506020610d0488828901610c9f565b9450506040610d1588828901610cb4565b9350506060610d2688828901610cb4565b9250506080610d3788828901610c69565b9150509295509295909350565b6000610d4f82610c7e565b9150610d5a83610c7e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9957610d98610a29565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd657610dd5610a29565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1357610e12610a29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5057610e4f610a29565b5b82820290509291505056fea26469706673582212208278d739a6a1ea61557b326427f99e10a92e58d5d5360a1fa4f824c16e278a1a64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}